/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_oits_ndk_JNI */

#ifndef _Included_com_oitp_msg_MsgJNI
#define _Included_com_oitp_msg_MsgJNI
#ifdef __cplusplus
extern "C" {
#endif

//删除事件句柄
JNIEXPORT void JNICALL Java_com_oitp_msg_MsgJNI_detachEventHandler(JNIEnv *env, jobject thiz);
//设置事件句柄
JNIEXPORT void JNICALL Java_com_oitp_msg_MsgJNI_setEventHandler(JNIEnv *env, jobject thiz, jobject eventHandler);

/*
 * Class:     com_oits_ndk_JNI
 * Method:    initJNI
 * Signature: (Ljava/lang/String;IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_oitp_msg_MsgJNI_initJNI
  (JNIEnv *env, jobject thiz, jstring addr, jint port,jboolean bOpenGlEs20);

/*
 * Class:     com_oits_ndk_JNI
 * Method:    releaseJNI
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_oitp_msg_MsgJNI_releaseJNI
  (JNIEnv * env, jobject thiz);

/*
 * Class:     com_oits_ndk_JNI
 * Method:    login
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_oitp_msg_MsgJNI_login
  (JNIEnv *env, jclass clz,jint uid,jint utype,jstring usrName,jstring realName,jstring code,jint timestmap);

/*
 * Class:     com_oits_ndk_JNI
 * Method:    sendTextMessage
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_oitp_msg_MsgJNI_sendTextMessage
  (JNIEnv *env, jclass clz, jint dstId,jint dstType,jint relationType,jint msgType, jstring message, jint fileSize, jint timeLen, jint sequence);

/*
*	设置目标教室ID
*/
JNIEXPORT void JNICALL Java_com_oitp_msg_MsgJNI_setDstRoom(JNIEnv *env, jclass clz, jint dstRoomID,jint nTeacherID);
/*
*	计算黑板比例
*/
JNIEXPORT jstring JNICALL Java_com_oitp_msg_MsgJNI_computeBoardScale(JNIEnv *env, jclass clz, jint scx,jint scy,jint dcx,jint dcy);
/*
* 开始录音
*/
JNIEXPORT void JNICALL Java_com_oitp_msg_MsgJNI_startRecord(JNIEnv *env, jclass clz);
/*
* 停止录音
*/
JNIEXPORT void JNICALL Java_com_oitp_msg_MsgJNI_stopRecord(JNIEnv *env, jclass clz);
/*
* 设置编码大小
*/
JNIEXPORT jboolean JNICALL Java_com_oitp_msg_MsgJNI_setEncodeSize(JNIEnv *env, jclass clz,jint w,jint h,jint nType);
/*
* 开始视频编码
*/
JNIEXPORT jboolean JNICALL Java_com_oitp_msg_MsgJNI_startVideoEncode(JNIEnv *env, jclass clz);
/*
* 停止视频编码
*/
JNIEXPORT jboolean JNICALL Java_com_oitp_msg_MsgJNI_stopVideoEncode(JNIEnv *env, jclass clz);

/*
* //编码视频数据
*/
JNIEXPORT jint JNICALL Java_com_oitp_msg_MsgJNI_encodeVideoData(JNIEnv *env, jclass clz,jintArray imgBuf1,jint w,jint h);

/*
* 发送举手协议
*/
JNIEXPORT jboolean JNICALL Java_com_oitp_msg_MsgJNI_myUpHand(JNIEnv *env, jclass clz);
/*
* 开始播放课件
*/
JNIEXPORT jboolean JNICALL Java_com_oitp_msg_MsgJNI_startPlayCwd(JNIEnv *env, jclass clz,jstring cwdFile);
/*
* 暂停播放课件
*/
JNIEXPORT jboolean JNICALL Java_com_oitp_msg_MsgJNI_pausePlayCwd(JNIEnv *env, jclass clz,jboolean bPause);
/*
* 停止播放课件
*/
JNIEXPORT jboolean JNICALL Java_com_oitp_msg_MsgJNI_stopPlayCwd(JNIEnv *env, jclass clz);
/*
* 检测网络连接
*/
JNIEXPORT void JNICALL Java_com_oitp_msg_MsgJNI_checkNetConnect(JNIEnv *env, jclass clz);
/*
* 退出登录
*/
JNIEXPORT void JNICALL Java_com_oitp_msg_MsgJNI_loginOut(JNIEnv *env, jclass clz);

#ifdef __cplusplus
}
#endif
#endif
